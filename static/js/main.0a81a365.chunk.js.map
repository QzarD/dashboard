{"version":3,"sources":["Components/Dashboard/Card.module.css","Components/Dashboard/Dashboard.module.css","Components/Dashboard/AddForm.jsx","Components/Dashboard/Card.jsx","Components/Dashboard/Column.jsx","Redux/dashboard-reducer.js","Components/Dashboard/Dashboard.jsx","App.js","Redux/store.js","index.js"],"names":["module","exports","AddForm","column","addColumn","addCard","columnIndex","React","useState","form","setForm","textForm","setTextFrom","className","styles","buttonContainer","placeholder","autoFocus","onBlur","value","onChange","e","target","name","id","cols","onClick","buttonRow","onMouseDown","variant","Card","text","index","deleteCard","columnId","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","card","cardText","btnDelete","Column","title","cards","deleteColumn","droppableId","droppableProps","nameColumnRow","nameColumn","btnDeleteColumn","map","key","ADD_COLUMN","ADD_CARD","DRAG_CARD","cardId","initialState","connect","state","columns","dashboard","type","sort","droppableIdStart","droppableIdEnd","droppableIdIndexStart","droppableIdIndexEnd","typeDrag","onDragEnd","result","destination","source","dashboardHome","direction","App","reducers","combineReducers","action","filter","_","newState","list","splice","listStart","listEnd","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a81a365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1kWob\",\"cardText\":\"Card_cardText__39y2N\",\"btnDelete\":\"Card_btnDelete__2QNS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardHome\":\"Dashboard_dashboardHome__W_aB3\",\"dashboard\":\"Dashboard_dashboard__1iaPb\",\"column\":\"Dashboard_column__z1r90\",\"nameColumnRow\":\"Dashboard_nameColumnRow__HqdHk\",\"nameColumn\":\"Dashboard_nameColumn__3fPI3\",\"btnDeleteColumn\":\"Dashboard_btnDeleteColumn__2D5jq\",\"btnAddCard\":\"Dashboard_btnAddCard__2BQt0\",\"sectionAddCard\":\"Dashboard_sectionAddCard__A6pF4\",\"btnAddCardNow_Row\":\"Dashboard_btnAddCardNow_Row__3G3Zf\",\"btnAddCardNow\":\"Dashboard_btnAddCardNow__53K3i\",\"btnCancelAddCard\":\"Dashboard_btnCancelAddCard__1Lszg\",\"form\":\"Dashboard_form__1ABkc\",\"buttonContainer\":\"Dashboard_buttonContainer__1GEsq\",\"buttonRow\":\"Dashboard_buttonRow__3WDCo\"};","import React from \"react\";\r\nimport styles from \"./Dashboard.module.css\"\r\n\r\nconst AddForm = ({column, addColumn, addCard, columnIndex}) => {\r\n    const [form, setForm] = React.useState(false);\r\n    const [textForm, setTextFrom] = React.useState(\"\");\r\n    const openForm = () => {\r\n        setForm(true)\r\n    };\r\n    const closeForm = () => {\r\n        setForm(false);\r\n        setTextFrom(\"\")\r\n    };\r\n    const onChangeForm = (e) => {\r\n        setTextFrom(e.target.value)\r\n    };\r\n    const pushButton=()=>{\r\n        column\r\n            ? addColumn(textForm)\r\n            : addCard(columnIndex, textForm)\r\n    };\r\n    return (\r\n        <div className={styles.buttonContainer}>\r\n            <div>\r\n                {form\r\n                    ? <div>\r\n                    <textarea\r\n                        placeholder={column ? \"Enter text of new column\" : \"Enter text of new card\"}\r\n                        autoFocus={true}\r\n                        onBlur={closeForm}\r\n                        value={textForm}\r\n                        onChange={onChangeForm}\r\n                        className={styles.form} name=\"textarea\" id=\"textarea\" cols=\"3\"/>\r\n                    </div>\r\n                    : <div onClick={openForm} className=\"pointer\">+ {column ? \"Add column\" : \"Add card\"}</div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {form\r\n                    ? <div className={styles.buttonRow}>\r\n                        <button onMouseDown={textForm? pushButton : null} variant=\"contained\" className=\"pointer\">\r\n                            {column ? \"Add column\" : \"Add card\"}\r\n                        </button>\r\n                        <div className=\"pointer\"> X </div>\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default AddForm;","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst Card = ({text, id, index, deleteCard, columnId}) => {\r\n    return (\r\n        <Draggable draggableId={String(id)} index={index}>\r\n            {provided => (\r\n                <div ref={provided.innerRef}\r\n                     {...provided.draggableProps}\r\n                     {...provided.dragHandleProps}\r\n                >\r\n                    <div className={styles.card}>\r\n                        <div className={styles.cardText}>\r\n                            {text}\r\n                        </div>\r\n                        <div onClick={()=>{deleteCard(columnId, index)}} className={styles.btnDelete}>\r\n                            X\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport styles from \"./Dashboard.module.css\"\r\nimport AddForm from \"./AddForm\";\r\nimport {Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst Column = ({title, cards, addColumn, addCard, columnId, columnIndex, deleteColumn, deleteCard, index}) => {\r\n    return (\r\n        <Draggable draggableId={String(columnIndex)} index={index}>\r\n            {provided => (\r\n                <div {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}\r\n                     className={styles.column}>\r\n                    <Droppable droppableId={String(columnId)}>\r\n                        {provided => (\r\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                <div className={styles.nameColumnRow}>\r\n                                    <div className={styles.nameColumn}>{title}</div>\r\n                                    <span onClick={() => {\r\n                                        deleteColumn(columnId)\r\n                                    }} className={styles.btnDeleteColumn}>X</span>\r\n                                </div>\r\n\r\n                                {cards.map((card, index) => (\r\n                                    <Card deleteCard={deleteCard}\r\n                                          columnId={columnId} index={index} id={card.id}\r\n                                          key={card.id} text={card.text}/>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                                <AddForm columnIndex={columnIndex}\r\n                                         addColumn={addColumn}\r\n                                         addCard={addCard}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n\r\n    )\r\n}\r\n\r\nexport default Column;\r\n","const ADD_COLUMN = 'dashboard/ADD_COLUMN';\r\nconst DELETE_COLUMN = 'dashboard/DELETE_COLUMN';\r\nconst ADD_CARD = 'dashboard/ADD_CARD';\r\nconst DELETE_CARD = 'dashboard/DELETE_CARD';\r\nconst DRAG_CARD = 'dashboard/DRAG_CARD';\r\n\r\nlet columnId = 0;\r\nlet cardId = 0;\r\nlet initialState = [];\r\n\r\nexport const dashboardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_COLUMN:\r\n            columnId += 1;\r\n            return [...state,\r\n                {title: action.title, id: columnId, cards: []}];\r\n        case DELETE_COLUMN:\r\n            return [...state.filter((_, index) => action.index !== index)];\r\n        case ADD_CARD:\r\n            cardId += 1;\r\n            return state.map(column => {\r\n                if (column.id === action.columnIndex) {\r\n                    return {\r\n                        ...column,\r\n                        cards: [...column.cards, {id: `cardId-${cardId}`, text: action.text}]\r\n                    }\r\n                }\r\n                return column\r\n            });\r\n        case DELETE_CARD:\r\n            return state.map((column, index) => {\r\n                if (index === action.columnId) {\r\n                    return {\r\n                        ...column,\r\n                        cards: [...column.cards.filter((_, index) => action.index !== index)]\r\n                    }\r\n                }\r\n                return column\r\n            });\r\n        case DRAG_CARD:\r\n            const newState = [...state];\r\n            //dragging column\r\n            if (action.typeDrag === \"list\"){\r\n                const list=newState.splice(action.droppableIdIndexStart, 1);\r\n                newState.splice(action.droppableIdIndexEnd, 0, ...list);\r\n                return newState\r\n            }\r\n            // in the same list\r\n            if (action.droppableIdStart === action.droppableIdEnd){\r\n                const list = state[action.droppableIdStart];\r\n                const card = list.cards.splice(action.droppableIdIndexStart, 1);\r\n                list.cards.splice(action.droppableIdIndexEnd, 0, ...card);\r\n            }\r\n            //other list\r\n            if (action.droppableIdStart !== action.droppableIdEnd){\r\n                const listStart = state[action.droppableIdStart];\r\n                const card=listStart.cards.splice(action.droppableIdIndexStart, 1);\r\n                const listEnd = state[action.droppableIdEnd];\r\n                listEnd.cards.splice(action.droppableIdIndexEnd, 0, ...card)\r\n            }\r\n\r\n                return newState\r\n            ;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addColumn = (title) => ({type: ADD_COLUMN, title});\r\nexport const addCard = (columnIndex, text) => ({type: ADD_CARD, columnIndex, text});\r\nexport const sort = (droppableIdStart,\r\n                     droppableIdEnd,\r\n                     droppableIdIndexStart,\r\n                     droppableIdIndexEnd,\r\n                     typeDrag) => ({\r\n    type: DRAG_CARD,\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIdIndexStart,\r\n    droppableIdIndexEnd,\r\n    typeDrag\r\n});\r\nexport const deleteColumn=(index)=>({type:DELETE_COLUMN, index});\r\nexport const deleteCard=(columnId, index)=>({type:DELETE_CARD, columnId, index});\r\n","import React from \"react\";\r\nimport AddForm from \"./AddForm\";\r\nimport Column from \"./Column\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\nimport styles from \"./Dashboard.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {addCard, addColumn, deleteCard, deleteColumn, sort} from \"../../Redux/dashboard-reducer\";\r\n\r\nconst Dashboard = ({columns, addColumn, addCard, sort, deleteColumn, deleteCard}) => {\r\n    const onDragEnd=(result)=>{\r\n        const {destination, source, type} =result;\r\n        if (!destination){\r\n            return\r\n        }\r\n        sort(\r\n            source.droppableId,\r\n            destination.droppableId,\r\n            source.index,\r\n            destination.index,\r\n            type\r\n        )\r\n    };\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className={styles.dashboardHome}>\r\n                <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                    {provided =>(\r\n                        <div className={styles.dashboard} {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {columns.map((column, index) => (\r\n                                <Column deleteCard={deleteCard} deleteColumn={deleteColumn}\r\n                                        columnId={index} index={index} columnIndex={column.id}\r\n                                        addColumn={addColumn} addCard={addCard} key={column.id}\r\n                                        title={column.title} cards={column.cards}/>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                            <AddForm column addColumn={addColumn}/>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    columns: state.dashboard\r\n});\r\n\r\nexport default connect(mapStateToProps, {addColumn, addCard, sort, deleteColumn, deleteCard})(Dashboard);","import React from 'react';\nimport './App.css';\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {dashboardReducer} from \"./dashboard-reducer\";\r\n\r\n\r\nconst reducers=combineReducers({\r\n    dashboard:dashboardReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n/*window.store=store;*/\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}